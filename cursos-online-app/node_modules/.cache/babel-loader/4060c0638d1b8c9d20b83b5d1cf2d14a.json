{"ast":null,"code":"import HttpCliente from \"../servicios/HttpCliente\";\nimport axios from \"axios\";\nconst instancia = axios.create();\ninstancia.CancelToken = axios.CancelToken;\ninstancia.isCancel = axios.isCancel;\nexport const registrarUsuario = usuario => {\n  return new Promise((resolve, eject) => {\n    instancia.post(\"/Usuario/registrar\", usuario).then(Response => {\n      resolve(Response);\n    });\n  });\n}; //dispatch para invocar al reducer y obtener toda las variables globales\n\nexport const obtenerUsuarioActual = dispatch => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.get(\"/usuario\").then(response => {\n      console.log(\"response\", response);\n\n      if (response.data && response.data.imagenPerfil) {\n        let fotoPerfil = response.data.imagenPerfil;\n        const nuevoFile = \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\n        response.data.imagenPerfil = nuevoFile;\n      }\n\n      dispatch({\n        type: \"INICIAR_SESION\",\n        sesion: response.data,\n        autenticado: true\n      });\n      console.log(\"exitoso\");\n      resolve(response);\n    }).catch(error => {\n      console.log(\"error actualizar aqui\", error);\n      resolve(error);\n    });\n  });\n};\nexport const actualizarUsuario = (usuario, dispatch) => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.put(\"/usuario\", usuario).then(response => {\n      if (response.data && response.data.imagenPerfil) {\n        let fotoPerfil = response.data.imagenPerfil;\n        const nuevoFile = \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\n        response.data.imagenPerfil = nuevoFile;\n      }\n\n      dispatch({\n        type: \"INICIAR_SESION\",\n        sesion: response.data,\n        autenticado: true\n      });\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const loginUsuario = (usuario, dispatch) => {\n  return new Promise((resolve, eject) => {\n    instancia.post(\"/usuario/login\", usuario).then(response => {\n      if (response.data && response.data.imagenPerfil) {\n        let fotoPerfil = response.data.imagenPerfil;\n        const nuevoFile = \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\n        response.data.imagenPerfil = nuevoFile;\n      }\n\n      dispatch({\n        type: \"INICIAR_SESION\",\n        sesion: response.data,\n        autenticado: true\n      });\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const obtenerUsuariosXRoles = rol => {\n  return new Promise((resolve, eject) => {\n    instancia.get(\"/Usuario/\" + rol).then(Response => {\n      resolve(Response);\n    });\n  });\n};\nexport const obtenerRoles = () => {\n  return new Promise((resolve, eject) => {\n    instancia.get(\"/Rol/lista\").then(Response => {\n      resolve(Response);\n    });\n  });\n};","map":{"version":3,"names":["HttpCliente","axios","instancia","create","CancelToken","isCancel","registrarUsuario","usuario","Promise","resolve","eject","post","then","Response","obtenerUsuarioActual","dispatch","get","response","console","log","data","imagenPerfil","fotoPerfil","nuevoFile","extension","type","sesion","autenticado","catch","error","actualizarUsuario","put","loginUsuario","obtenerUsuariosXRoles","rol","obtenerRoles"],"sources":["F:/GIT/Siric/WebSite/cursos-online-app/src/actions/UsuarioAction.js"],"sourcesContent":["import HttpCliente from \"../servicios/HttpCliente\";\r\nimport axios from \"axios\";\r\n\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\nexport const registrarUsuario = (usuario) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.post(\"/Usuario/registrar\", usuario).then((Response) => {\r\n      resolve(Response);\r\n    });\r\n  });\r\n};\r\n\r\n//dispatch para invocar al reducer y obtener toda las variables globales\r\nexport const obtenerUsuarioActual = (dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.get(\"/usuario\")\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n        console.log(\"exitoso\");\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error actualizar aqui\", error);\r\n\r\n        resolve(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const actualizarUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.put(\"/usuario\", usuario)\r\n      .then((response) => {\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const loginUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia\r\n      .post(\"/usuario/login\", usuario)\r\n      .then((response) => {\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const obtenerUsuariosXRoles = (rol) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.get(\"/Usuario/\" + rol).then((Response) => {\r\n      resolve(Response);\r\n    });\r\n  });\r\n};\r\n\r\nexport const obtenerRoles = () => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.get(\"/Rol/lista\").then((Response) => {\r\n      resolve(Response);\r\n    });\r\n  });\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}